RegExp
捕获组 
	在正则表达式中 可以进行分组 通过一对圆弧括号括起来的表达式就是一个分组

	分组之后可以将各组子表达式分开处理 这两个分组就是捕获组

	捕获组就是将正则表达式中表达式匹配的结果 分组按照顺序保存。之后可以通过序号
	和名称来使用这些内容。js 暂不支持命名。所以只能通过序号来访问  

	反向引用：在表达式中直接使用某个分组的内容

	用法：在replace中是 $ + 序号  在reg正则表达式中是 \ + 序号

	匹配前后相同的数  置换前后两个数的位置

非捕获组
	只匹配执行过程。不报错匹配结果的分组 就是非捕获组 
	在捕获组表达式左括号 + '?' ':' 等符号 可构成非捕获组
	(?:exp) 匹配 pattern 但是不存储供使用
零宽断言
	正向预查(正向先行断言)
		(?=exp)
		匹配exp前面的位置
		reg = /\b[\w]+(?=ing\b)/g;
		先匹配单词边界\b 然后+ 匹配前面\w d 一次或者多次 然后到正向预查 (?=ing)
		表示先向后匹配 匹配 ing 如果有就把前面的匹配出来 如果没有就光标后移 继续匹配
	负向预查(负向先行断言)
		(?!exp)
		匹配后面不是exp的位置
js 不支持后瞻
	正向后瞻(正向后行断言)
		(?<=exp)
		匹配exp后面的位置不支持
	负向后瞻(负向后行断言)
		(?<!exp)
		匹配前面不是exp的位置不支持

正则replace 约定的一个特殊标记
	$i (i:1-99)表示从左到右正则子表达式所匹配的文本
	$&  表示与正则表达式匹配的全文本
	'99999999999'.replace(/\d{1,3}(?=(\d{3})+$)/g, '$&,')
	$` (`:切换技能键) 表示匹配字符串的左边文字
	$' (':单引号英文) 表示匹配字符串的右边文字

()  将括号中的定义为组  并且将匹配的字符保存到临时区域

match 是贪婪匹配？？

